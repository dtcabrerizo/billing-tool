<!DOCTYPE html>
<html>

<head>
  <title>Billing Tool</title>
  <meta charset="UTF-8" />
  <meta http-equiv="content-language" content="pt_BR">
  <link rel='stylesheet' href='/stylesheets/style.css' />

  <!-- CSS only -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-0evHe/X+R7YkIZDRvuzKMRqM+OrBnVFBL6DOitfPri4tjfHxaWutUpFmBp4vmVor" crossorigin="anonymous">
  <!-- JavaScript Bundle with Popper -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0-beta1/dist/js/bootstrap.bundle.min.js" integrity="sha384-pprn3073KE6tl6bjs2QrFaJGz5/SUsLqktiwsUTF55Jfv3qYSDhgCecCxMW52nD2" crossorigin="anonymous"></script>
</head>

<body class="container mt-4">
  <h1 class="d-flex align-items-center gap-4 c-header">
    <% if (type=='AWS' ) { %> <img src="/images/aws.svg"> <% } %>
    <% if (type=='Azure-CSP' ) { %> <img src="/images/azure-csp.svg"> <% } %>
    <% if (type=='Azure-EA' ) { %> <img src="/images/azure-ea.svg"> <% } %>
    <% if (type=='AzureNew-EA' ) { %> <img src="/images/azure-new-ea.svg"> <% } %>
    <% if (type=='Azure-CSP-Light' ) { %> <img src="/images/azure-csp-light.svg"> <% } %>
    <div class="pt-4 pb-4">Resultado</div>
  </h1>
  <small>Arquivo: <%= fileName %></small>

  <table class="table table-sm">
    <thead>
      <tr>
        <th class="text-center">Volumetria</th>
        <th class="text-center">Complexidade</th>
        <th class="text-center">Custo de Nuvem</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="text-center"> <%= volumetria %> </td>
        <td class="text-center"> <%= complexidade %> </td>
        <td class="text-center"> <%= Intl.NumberFormat('pt-br', {style: 'currency' , currency: 'USD' }).format(totalCost) %> </td>
      </tr>
    </tbody>
  </table>

  <% 
  const createList=(title, name, list)=> { 
     const listName=`${name}List`; 
     const memSizes=[1.6, 4, 8, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208,  224, 240]; 
     const cpuSizes=[2, 4, 6, 8, 12, 16, 24, 32, 48, 64]; 
     const getSize=(l,n)=> {
      return l.filter(v => v >= n)[0] || l[l.length - 1];
     }

    const mRes = list?.reduce(
      (acc, v) => {

      const cpuSize = getSize(cpuSizes, v._cpu);
      const memSize = getSize(memSizes, v._mem);

      if (!acc[cpuSize]) acc[cpuSize] = [];
      if (!acc[cpuSize][memSize]) acc[cpuSize][memSize] = 0;
      acc[cpuSize][memSize] = Number(acc[cpuSize][memSize]) + Number(v._calculatedQuantity);
      return acc;
    }, []);
  %>
  <h3 class="d-flex">
    <div class="w-100">
      <%= title %>
      (<%= list?.reduce( (acc,it)=> acc += it._calculatedQuantity, 0) %>)
      <% if (list.some( svc=> svc.remarks?.length > 0)) { %>
      <span class="badge text-black-50 me-3 bg-warning"> ! </span>
      <% } %>
    </div>
    <button class="btn btn-sm btn-primary me-3" data-bs-toggle="collapse" href="#<%= listName %>" role="button" aria-expanded="false" aria-controls="<%= listName %>">
      Detalhes
    </button>
  </h3>
  <div class="collapse" id="<%= listName %>">
    <div class="card card-body">
      <table class="table table-sm table-hover">
        <thead>
          <tr>
            <th>Tipo</th>
            <th>Descrição</th>
            <th>vCPU</th>
            <th>Memória</th>
            <th>Quantidade</th>
            <th>Quantidade Considerada</th>
          </tr>
        </thead>
        <tbody>
          <% list?.forEach(v=> { %>
          <tr>
            <td>
              <%= v._type %>
              <% if (v.remarks?.length> 0) { %>
              <span class="badge text-black-50 me-3 bg-warning" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" data-bs-title="<%= v.remarks.map(r => `<p>${r}</p>`).join('') %>"> ! </span>
              <% } %>
            </td>
            <td>
              <%= v._description %>
            </td>
            <td>
              <%= v._cpu %>
            </td>
            <td>
              <%= v._mem %>
            </td>
            <td>
              <%= v._quantity %>
            </td>
            <td>
              <%= v._calculatedQuantity %>
            </td>
          </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>
  <table class="table table-sm small listTable table-striped-columns table-responsive">
    <thead>
      <tr>
        <th class="text-center"></th>
        <% memSizes.forEach(v=> { %>
        <th class="text-center">
          <%= v %>
        </th>
        <% }) %>
      </tr>
    </thead>
    <tbody>
      <% cpuSizes.forEach( (cpuSize, row)=> { %>
      <tr>
        <th class="text-center">
          <%= cpuSize %>
        </th>
        <% if (mRes?.[cpuSize]) { %>
        <% memSizes.forEach((_, memSizeIndex)=> {
                    const memSize = memSizes[memSizeIndex];
                    const qtd = mRes[cpuSize][memSize] || 0;
                    %>
        <td class="text-center <%= qtd == 0 ? 'text-muted' : '' %>">
          <% if (qtd) { %>
          <%= qtd %>
          <% } else { %>
          &nbsp;
          <% } %>
        </td>
        <% }); } else { %>
        <% memSizes.forEach(s=> { %>
        <td class="text-center">&nbsp;</td>
        <% }) %>
        <% } %>
      </tr>
      <% }) %>
    </tbody>


  </table>
  <% } %>

  <%- createList('Máquinas Virtuais', 'vm' , vm); %>
  <%- createList('Banco de dados', 'rds' , rds); %>

  <h3>Preço Serviços</h3>
  <div class="accordion" id="groups">
    <% 
      Object.entries(groups).forEach( ([groupName, group]) => { 
        const groupId=groupName.replace(/\W/g, '_' ) 
        const hasRemark=group.some( svc=> svc.remarks?.length > 0) 
     %>
    <div class="accordion-item">
      <h2 class="accordion-header" id="header-group-<%= groupId %>">
        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#group-<%= groupId %>" aria-expanded="true" aria-controls="group-<%= groupId %>">
          <div class="w-100 me-auto">
            <%= groupName %>
            <% if (hasRemark) { %>
            <span class="badge text-black-50 me-3 bg-warning"> ! </span>
            <% } %>
          </div>
          <% if (! isNaN(group.complexidade)) { %>
          <span class="badge text-bg-primary me-3">
            Complexidade: <%= group.complexidade %>
          </span>
          <% } %>
          <% if (! isNaN(group.volumetria)) { %>
          <span class="badge text-bg-secondary me-3">
            Volumetria: <%= group.volumetria %>
          </span>
          <% } %>
        </button>
      </h2>
      <div id="group-<%= groupId %>" class="accordion-collapse collapse" aria-labelledby="header-group-<%= groupId %>" data-bs-parent="#groups">
        <div class="accordion-body">
          <div class="accordion" id="service-<%= groupId %>">
            <% group.forEach( (service)=> { %>
            <% const serviceBSID=service.serviceId?.replace(/\W/g, '_' ) || 'null' %>
            <div class="accordion-item">
              <h4 class="accordion-header" id="header-service-<%= serviceBSID %>">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#service-<%= serviceBSID %>" aria-expanded="true" aria-controls="service-<%= serviceBSID %>">
                  <div class="w-100 me-auto">
                    <%= service.serviceId %>
                    <% if (service.remarks?.length> 0) { %>
                    <span class="badge text-black-50 me-3 bg-warning" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-html="true" data-bs-title="<%= service.remarks.map(r => `<p>${r}</p>`).join('') %>"> !
                    </span>
                    <% } %>
                  </div>
                  <% if (! isNaN(service.total)) { %>
                  <span class="badge text-black-50 me-3">
                    Total: <%= Intl.NumberFormat('pt-br').format(service.total) %>
                  </span>
                  <% } %>
                  <% if (! isNaN(service.volumetria)) { %>
                  <span class="badge text-bg-secondary me-3">
                    Volumetria: <%= service.volumetria %>
                  </span>
                  <% } %>
                </button>
              </h4>
              <div id="service-<%= serviceBSID %>" class="accordion-collapse collapse" aria-labelledby="header-group-<%= groupId %>" data-bs-parent="#service-<%= groupId %>">
                <div class="accordion-body">
                  <table class="table table-sm table-hover table-striped small table-borderless">
                    <thead>
                      <th>Descrição</th>
                      <th>Utilização</th>
                    </thead>
                    <tbody>
                      <% service?.items?.forEach( (item)=> { %>
                      <tr>
                        <td><%= item?.Description %></td>
                        <td><%= item.Quantity %></td>
                      </tr>
                      <% }) %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
            <% }) %>
          </div>
        </div>
      </div>
    </div>
    <% }) %>
  </div>


</body>
<script>
  const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
  const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl));
</script>

<pre>
  <%- JSON.stringify(rds.remarks, null, 4) %>
</pre>

</html>